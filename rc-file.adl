# Parser-Definitions for the Mediathek-Parsers
# --------------------------------------------

parsername "linkextract": ( "" )
start
  linkextract;
  print;
end


# Beispiel: http://www.ardmediathek.de/das-erste/polizeiruf-110/am-set-von-polizeiruf-110-interview-mit-charly-huebner?documentId=11177770
# =================================
# ARD - complete download works :-)
# =================================
parsername "ard_mediathek_get": ("http://www.ardmediathek.de", "http://mediathek.daserste.de")
start

  match( >>>(rtmpt{0,1}://[^\"]+).*?(mp4:[^\"]+)\"<<< );
  store("match");
  rowselect(2);
  store("high");

  show_type;
  print;

  select(1); store("rtmp");
  recall("high");
  select(2); store("mp4");

  # "outfile.mp4" is bad; better use a name, derived from the URL 
  # --------------------------------------------------------------
  paste("rtmpdump --resume  -r \"",  $rtmp, "\" -y \"", $mp4, "\"  -o outfile.mp4" );
  print;
  system;

end



# ARTE
#
# 1. Hauptseite ziehen
# 2. Matche id_re = re.compile('class="vote .ajaxUrl:..?(/../do_delegate/videos/)([^,]+),view,ratingForm.html')
# 3. Xml-Url erzeugen aus: xmlurl = 'http://videos.arte.tv%s%s,view,strmVideoAsPlayerXml.xml' % (match.group(1), match.group(2))
#    wobei match.group(1) und match.group(2) die beiden Teilmatches (Group-Matches) aus dem match aus (Punk 1) sind
# 4. downloade die XML-Datei
# 5. Matche auf url_re = re.compile('<url quality="([^"]+)">([^<]+)<')
# 6. selektiere die / eine Qualit채tsstufe und entnehme dort die RTMP-Url (2. Group)
# 7. Kreiere Download-String
# 8. Downloade Datei


# Beispiel-URL: http://videos.arte.tv/de/videos/joe-strummer--7161356.html

parsername "arte_get": ( "http://videos.arte.tv" )
start
  match( >>>class="vote .ajaxUrl:..?(/../do_delegate/videos/)([^,]+),view,ratingForm.html<<< );
  show_match;

  rowselect(0);

  store("ajax");

  select(1); store("group_1");
  recall("ajax");
  select(2); store("group_2");

  paste("http://videos.arte.tv", $group_1, $group_2, ",view,strmVideoAsPlayerXml.xml");
  makeurl;
  get;
  match(_*_<url quality="([^"]+)">([^<]+)<_*_);

#<urls>
#<url quality="sd">rtmp://artestras.fcod.llnwd.net/a3903/o35/mp4:geo/videothek/ALL/arteprod/A7_SGT_ENC_02_045368-000-A_PG_MQ_DE?h=656b8b0ff570b6280be8acd0b47495bf</url>
#<url quality="hd">rtmp://artestras.fcod.llnwd.net/a3903/o35/mp4:geo/videothek/ALL/arteprod/A7_SGT_ENC_04_045368-000-A_PG_HQ_DE?h=1b67e74cf4313d1a3979fe670187146d</url>
#</urls>

  rowselect(1);
  select(2);
  store("rtmp");

  # create filename
  to_string;
  basename;
  store("filename");

  # download the video
  # ------------------
  paste("rtmpdump --resume  -r \"",  $rtmp, "\"  -o ", $filename );
  system;

end




# Example: http://www.ndr.de/fernsehen/sendungen/mein_nachmittag/videos/wochenserie361.html
parsername "ndr_mediathek_get": ( "http://www.ndr.de" )
start
  match( "http://.*?mp4" );
  rowselect(0);
  store("url");

  # download the video
  # ------------------
  paste("wget ",  $url );
  system;
end


# (* Webpage -> ASX-Link -> ASX-Page -> MMS-Link *)
# http://www.zdf.de/ZDFmediathek/beitrag/video/1800812/Das-Adlon.-Eine-Familiensaga-%25281%2529?bc=sts;stt&flash=off
parsername "zdf_mediathek_get": ( "http://www.zdf.de" )
start
  match( "http://.*?asx" );
  rowselect(0);
  select(0);

  # get the ASX-file (URL should be grabbed from last action... so this is a workaround here *)
  makeurl;
  get;
  print_string("ASX-file downloaded.\n");

  linkextract_xml;

  select(0);
  store("mms");

  # create filename
  to_string;
  basename;
  store("filename");

  # download the video
  # ------------------
  paste("mplayer -dumpstream  \"",  $mms, "\" -dumpfile ", $filename );
  system;

end




# http://wstreaming.zdf.de/zdf/veryhigh/130106_teileins_fs_adl.asx
# ZDF-Mediathek, mit dem asx-file ("Windows Media Player")
# ----------------------------------------------------------------
parsername "zdf_mediathek_asx": ( "http://wstreaming.zdf.de")
start
  linkextract_xml;
  select(0);
  store("mms");

  # create filename
  to_string;
  basename;
  store("filename");

  paste("mplayer -dumpstream  \"",  $mms, "\" -dumpfile zdf_outfile.wmv" );
  system;
end


##################
### NOT TESTED ###
##################


parsername "dctp_mediathek_get": ( "http://www.dctp.tv" )
start
  match( "(mp4:.*\")" );
  print;
end


# http://tvthek.orf.at/topics/Asyl-Protest/5183121-heute-oesterreich/segments/5183161-Protest-der-Asylwerber
parsername "orf_mediathek_get": ( "http://tvthek.orf.at" )
start
  linkextract;
  print;
  #match( "(mp4:.*\")" );
  #print;
end



##################################################################################
#### BELOW IS OLD (directly coded) STUFF, JUST AS REFERENCE FOR FUTURE PARSERS ###
##################################################################################






# (*
#   Pro-Sieben:
# 
# 
#   Im Gulli-Board konnte ich folgenden Trick finden
# 
#   http://www.prosieben.de/dynamic/h264/h264map/?ClipID=<...>
#   <...> durch die ID des Videos ersetzen
# 
#   F체r dieses Video (www.prosieben.de/tv/galileo/videos/clip/288557-asperger-informatik-1.3122799) also
#   http://www.prosieben.de/dynamic/h264/h264map/?ClipID=288557
# 
#   bei Aufruf erfolgt eine Weiterleitung zu
# 
#   http://video.sevenoneintermedia.de/clips/geo_d_at_ch/mp4-840 /288000/288557-840-553674.mp4?s=1&t=20120331
# 
#   werde mich bei Gelegenheit noch vorstellen
# 
#   [Aktualisiert am: Sa, 31 M채rz 2012 22:50]
# *)
# 
# (*
#  WDR Monitor:
# 
#    <a title="Video: Flashplayer ab Version 8.0 erforderlich" rel="base#/tv/monitor/codebase/video/" href="http://www.wdr.de/themen/global/flashplayer/fscreen.jhtml?dslSrc=rtmp://gffstream.fcod.llnwd.net/a792/e2/mediendb/monitor08/video/2012/0426/120426_monitor_web-l.mp4&amp"
# *)
# 
# let _3sat_mediathek_get = ()
# (*
# 1. suche hauptseite
# 2. get &mode=play - Seite
# 3. get smil-Datei
# 4. ...
# 
# 120308_japan_scobel.smil
# *)
# 
# (*
#  Beispiel: "Just Ballet"
#    http://www.3sat.de/mediathek/?display=1&mode=play&obj=30650
# 
# enth채lt:
#    (...)
#    playerBottomFlashvars.mediaURL = "http://fstreaming.zdf.de/3sat/veryhigh/120427_justballet_ganzesendung1neu_musik.smil";
#    (...)
# 
# 
# *)
# 
# 
# (* Sender-spezifische URL-Grabber *)
# (* ============================== *)
# let zdf_mediathek_get_mmsurl    = web_asx_mms_get
# let orf_mediathek_get_mmsurl    = web_asx_mms_get
# let arte_mediathek_get_rtmp_url = arte_get
# let ard_mediathek_get           = ard_mediathek_get_rtmp_mp4_url_version_4
# let ndr_mediathek_get           = ndr_mediathek_get
# 
# 
# --------------------------------------------------------------------------------------
#
#
#
# (* http://www.ndr.de/fernsehen/sendungen/45_min/videos/minuten393.html
# 
# <div id="flash_player_audio_gallery_minuten393">
# F&uuml;r diesen Inhalt muss JavaScript aktiviert und die aktuelle Version vom Adobe Flash Player installiert sein. Sie k&ouml;nnen den Player hier runterladen. <a href="http://get.adobe.com/de/flashplayer/" title="Adobe Flash Player runterladen">http://get.adobe.com/de/flashplayer/</a>
# <div class="filename invisible" data-value="http://media.ndr.de/progressive/2011/1205/TV-20111205-2327-1201.hq.mp4"></div>
# <div class="imgname invisible" data-value="/fernsehen/sendungen/45_min/hintergrund/paketsklaven133_v-contentgross.jpg"></div>
# </div>
# *)
# 
# 
# 
# 
# (* W D R *)
# (* ===== *)
# 
# (* WDR:
# Stringmatch auf:
#   rtmp://gffstream.fcod.llnwd.net/a792/e2/mediendb/markt/video/2012/0227/120227_markt_web-m.mp4&amp;overlay
# 
# WDR:
# 
# http://www.wdr.de/tv/quarks/sendungsbeitraege/2009/1222/003_arena_mannfrau.jsp?startMedium=122037&startPicture=/tv/fsstd-technik/codebase/img/default_startbild.jpg&dslSrc=rtmp://gffstream.fcod.llnwd.net/a792/e2/tv/quarks/091229_das_eyetracking_experiment_big.flv&overlayPic=/tv/quarks/codebase/img/overlay_video.png&offset=0&red=fsstd-tv%2Fquarks&base=/tv/quarks/codebase/video/&isdnSrc=rtmp://gffstream.fcod.llnwd.net/a792/e2/tv/quarks/091229_das_eyetracking_experiment_small.flv
# 
# Stringmatch auf:
# dslSrc=rtmp://gffstream.fcod.llnwd.net/a792/e2/tv/quarks/091229_das_eyetracking_experiment_big.flv&
# *)
# let wdr_mediathek_get_rtmp_mp4_url  url =
#   let commandlist = [ Get_url(url, "-");
#                       Match( "(rtmpt{0,1}://[^\"]+).*?(mp4:[^\"]+)\"" );
#                       Select( Selector.select_first_match );
#                       Print_match;
#                       Dummy
#                     ]
#   in
#   evaluate_command_list commandlist;
#   [""]
# 
# 
