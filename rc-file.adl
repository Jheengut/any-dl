# =====================================================
# General Parsers, not specific to Mediathek-Archives #
# =====================================================
parsername "linkextract": ( "" )
start
  linkextract;
  print;
end


parsername "linkextract_xml": ( "" )
start
  linkextract_xml;
  print;
end


# html-deparse-dump
parsername "dump": ( "" )
start
  dump;
end


# this one is unmature stuff, experimental field.
parsername "videonames": ( "" )
start
  match( "(*.mp4)|(*.flv)|(*.swf)|(*.mpg)|(*.m4v)" );
  print;
end





# ==============================================
# Parser-Definitions for the Mediathek-Parsers #
# ==============================================




# ---------------------------------
# ARD 
# ---------------------------------
# Example: http://www.ardmediathek.de/das-erste/polizeiruf-110/am-set-von-polizeiruf-110-interview-mit-charly-huebner?documentId=11177770
# =================================
parsername "ard_mediathek_get": ("http://www.ardmediathek.de", "http://mediathek.daserste.de")
start
  match( >>>(rtmpt{0,1}://[^\"]+).*?(mp4:[^\"]+)\"<<< );
  store("match");
  rowselect(2);
  store("high");

  #show_type;
  #print;

  select(1); quote;  store("rtmp");
  recall("high");
  select(2); quote; store("mp4");

  # create filename
  # ---------------
  to_string;
  basename;
  subst("[+?].*$", "");
  store("filename");
  #print;

  # create new filename from folename and the title of the video
  # ------------------------------------------------------------
  recall("BASEDOC");
  match(>>><meta itemprop="name" content="([^\"]+)<<<);
  rowselect(0);
  select(1);
  subst("[ -!]+", "_");
  store("title");

  paste( $title, "_", $filename );
  quote;
  store("filename");

#print;
#exitparse;
  # Titel:   <meta itemprop="name" content="Verkauft und versklavt - Gott und die Welt"/>

  # "outfile.mp4" is bad; better use a name, derived from the URL 
  # --------------------------------------------------------------
  paste("rtmpdump --resume  -r ",  $rtmp, " -y ", $mp4, " -o ", $filename );
  print;
  system;

end





# ---------------------------------
# ARTE
# ---------------------------------
# 1. Hauptseite ziehen
# 2. Matche id_re = re.compile('class="vote .ajaxUrl:..?(/../do_delegate/videos/)([^,]+),view,ratingForm.html')
# 3. Xml-Url erzeugen aus: xmlurl = 'http://videos.arte.tv%s%s,view,strmVideoAsPlayerXml.xml' % (match.group(1), match.group(2))
#    wobei match.group(1) und match.group(2) die beiden Teilmatches (Group-Matches) aus dem match aus (Punk 1) sind
# 4. downloade die XML-Datei
# 5. Matche auf url_re = re.compile('<url quality="([^"]+)">([^<]+)<')
# 6. selektiere die / eine Qualitätsstufe und entnehme dort die RTMP-Url (2. Group)
# 7. Kreiere Download-String
# 8. Downloade Datei
# ---------------------------------
# Example-URL: http://videos.arte.tv/de/videos/joe-strummer--7161356.html
# =================================
parsername "arte_get": ( "http://videos.arte.tv" )
start
  match( >>>class="vote .ajaxUrl:..?(/../do_delegate/videos/)([^,]+),view,ratingForm.html<<< );
  show_match;

  rowselect(0);

  store("ajax");

  select(1); store("group_1");
  recall("ajax");
  select(2); store("group_2");

  paste("http://videos.arte.tv", $group_1, $group_2, ",view,strmVideoAsPlayerXml.xml");
  makeurl;
  get;

# quality is coded like this:
#<urls>
#<url quality="sd">rtmp://artestras.fcod.llnwd.net/a3903/o35/mp4:geo/videothek/ALL/arteprod/A7_SGT_ENC_02_045368-000-A_PG_MQ_DE?h=656b8b0ff570b6280be8acd0b47495bf</url>
#<url quality="hd">rtmp://artestras.fcod.llnwd.net/a3903/o35/mp4:geo/videothek/ALL/arteprod/A7_SGT_ENC_04_045368-000-A_PG_HQ_DE?h=1b67e74cf4313d1a3979fe670187146d</url>
#</urls>

  match(_*_<url quality="([^"]+)">([^<]+)<_*_);
  show_match;



  # QUALITY-SELECTION!!!
  # --------------------
  rowselect(1);
  print("selected quality: ");
  print;

  select(2);
  store("rtmp");


  # create filename
  # ---------------
  #to_string;
  #basename;
  #subst("$", ".mp4"); # append ".mp4" at end of the filename
  #store("filename");  # store filename

  recall("BASEDOC");
  match("<title>(.*?)</title>");
  rowselect(0); select(1);
  subst("[ -:]+", "_");
  store("title");

  # download the video
  # ------------------
  paste("rtmpdump --resume  -r \"",  $rtmp, "\"  -o ", $title, ".mp4" );
  system;

end




# ---------------------------------
# NDR 
# ---------------------------------
# Example: http://www.ndr.de/fernsehen/sendungen/mein_nachmittag/videos/wochenserie361.html
# =================================
parsername "ndr_mediathek_get": ( "http://www.ndr.de", "http://www.ardmediathek.de/ndr-fernsehen/" )
start
  match( "http://.*?mp4" );
  show_match;
  rowselect(0);
  store("url");

  # download the video
  # ------------------
  paste("wget -c ",  $url );
  system;
end


# ---------------------------------
# ZDF 
# ---------------------------------
# (* Webpage -> ASX-Link -> ASX-Page -> MMS-Link *)
# ---------------------------------
# Example: http://www.zdf.de/ZDFmediathek/beitrag/video/1800812/Das-Adlon.-Eine-Familiensaga-%25281%2529?bc=sts;stt&flash=off
# =================================
parsername "zdf_mediathek_get": ( "http://www.zdf.de" )
start
  match( "http://.*?asx" );
  rowselect(0);
  select(0);

  # get the ASX-file (URL should be grabbed from last action... so this is a workaround here *)
  makeurl;
  get;
  print("ASX-file downloaded.\n");

  linkextract_xml;

  select(0);
  store("mms");

  # create filename
  to_string;
  basename;
  store("filename");

  # download the video
  # ------------------
  paste("mplayer -dumpstream  \"",  $mms, "\" -dumpfile ", $filename );
  system;

end

# Sendungstitel:
# http://www.zdf.de/ZDFmediathek/beitrag/video/1778740/Mars-Mega-Rover?flash=off
# <title>Mars Mega Rover - ZDFinfo - ZDFmediathek - ZDF Mediathek</title>
#
# </div>  
# <!-- EndeBreadcrumbNavigation --><!-- StartHeadlineDesBeitrags -->
# <h1 class="beitragHeadline">Mars Mega Rover</h1>
# <!-- EndeHeadlineDesBeitrags -->
# <img src="/ZDFmediathek/contentblob/1778740/timg485x273blob/7360575" title="Curiosity" alt="Mars Mega Rover"/>



# ----------------------------------------------------------------
# ---------------------------------
# ZDF 
# ---------------------------------
# Example: http://wstreaming.zdf.de/zdf/veryhigh/130106_teileins_fs_adl.asx
# =================================
parsername "zdf_mediathek_asx": ( "http://wstreaming.zdf.de")
start
  linkextract_xml;
  select(0);
  store("mms");

  # create filename
  to_string;
  basename;
  store("filename");

  paste("mplayer -dumpstream  \"",  $mms, "\" -dumpfile ", $filename );
  system;
end





# ---------------------------------
# WDR 
# ---------------------------------
# Example: http://www.wdr.de/mediathek/html/regional/2013/01/09/hier-und-heute.xml
# =================================
parsername "wdr_mediathek": ( "http://www.wdr.de" )
start
  match("rtmp://.*?mp4");
  show_match;

#  dslSrc=rtmp://gffstream.fcod.llnwd.net/a792/e1/media/video/2013/01/09/20130109_huh_309287_web-m.mp4&amp;isdnSrc=rtmp://gffstream.fcod.llnwd.net/a792/e1/media/video/2013/01/09/20130109_huh_309287_web-s.mp4&amp;mediaDuration=839',

  rowselect(0); # quality selection !!!
  #show_type;

  to_string;
  store("rtmp");
  #show_type;

  basename;
  store("filename");
  #print;

  paste("rtmpdump --resume  -r \"",  $rtmp, "\"  -o ", $filename );
  print;
  system;
end

# ---------------------------------
# ARD/HR 
# ---------------------------------
# Example: http://www.ardmediathek.de/hr-fernsehen/alle-wetter/mikroblockheizkraftwerke?documentId=13068860
# =================================
parsername "ard_hr": ( "http://www.ardmediathek.de/hr-fernsehen/" ) 
start
  match( "http://.*mp4" );
  rowselect(0);
  store("url");

  # make a better outfilename with title
  # ------------------------------------
  recall("BASEDOC");
  match(>>><meta itemprop="name" content="([^\"]+)<<<);

  rowselect(0);
  select(1);
  subst("[! -]+", "_");
  store("title");

  paste($title, ".mp4");
  subst("_\.", ".");
  store("outfilename");


  # download the video
  # ------------------
  paste( "wget -c ",  $url, " -O ", $outfilename );
  system;
end
#
#  paste( $title, "_", $filename );
#  quote;
#  store("filename");




##################
### NOT TESTED ###
##################
parsername "vimeo": ( "http://vimeo.com" )
start
end

# (*
#   Pro-Sieben:
# 
#   Im Gulli-Board konnte ich folgenden Trick finden
# 
#   http://www.prosieben.de/dynamic/h264/h264map/?ClipID=<...>
#   <...> durch die ID des Videos ersetzen
# 
#   Für dieses Video (www.prosieben.de/tv/galileo/videos/clip/288557-asperger-informatik-1.3122799) also
#   http://www.prosieben.de/dynamic/h264/h264map/?ClipID=288557
# 
#   bei Aufruf erfolgt eine Weiterleitung zu
#   http://video.sevenoneintermedia.de/clips/geo_d_at_ch/mp4-840 /288000/288557-840-553674.mp4?s=1&t=20120331
# *)
# ---------------------------------
# PRO7
# ---------------------------------
# Example: ...
# =================================
parsername "pro7_mediathek_get": ( "http://www.prosieben.de" )
start
  store("url");
  match( "(\".*?mp4.*?\")" );
  show_match;

  # und wie nun weiter?

end




# ---------------------------------
# 3SAT
# ---------------------------------
# Example: http://www.3sat.de/mediathek/index.php?display=1&mode=play&obj=34110
# http://www.3sat.de/mediathek/index.php?display=1&mode=play&obj=34191
# =================================
parsername "3sat_mediathek_get": ( "http://www.3sat.de" )
start
  store("url");

  # look out for smil-url
  match( "\"(.*?smil.*?)\"" );
  rowselect(0);
  select(1);

  print;

  show_type;
  makeurl;
  get;

  store("smil_file");
  #print;

#<video dur="00:44:08" paramGroup="gl-vod-rtmp" src="mp4:3sat/12/12/121216_american_collapse_online_51k_p7v9.mp4" system-bitrate="62000">
#<param name="quality" value="low" />
#</video>
#<video dur="00:44:08" paramGroup="gl-vod-rtmp" src="mp4:3sat/12/12/121216_american_collapse_online_536k_p9v9.mp4" system-bitrate="700000">
#<param name="quality" value="high" />
#</video>
#<video dur="00:44:08" paramGroup="gl-vod-rtmp" src="mp4:3sat/12/12/121216_american_collapse_online_1596k_p13v9.mp4" system-bitrate="1700000">
#<param name="quality" value="veryhigh" />

# Beispiel: select VeryHigh quality
# ---------------------------------

  # ----
  match( >>>(mp4:.*?)"|name="quality" value="(.*)"<<<);
  show_match;

  rowselect(4);
  select(1);
  store("mp4");
  subst("mp4:", "");
  store("mp4_simple");
  print;
  basename;
  store("outname");
  print;

  # ----
  recall("smil_file");
  match( >>>param name="app" value="(.*?)"<<<);
  show_match;

  rowselect(0);
  select(1);
  print;
  store("app");

  # ----
  recall("smil_file");
  match( >>>param name="host" value="(.*?)"<<<);
  show_match;
  rowselect(0);
  select(1);
  store("rtmp_hostname");

  paste(" rtmpdump --resume -r rtmp://", $rtmp_hostname, "/", $app, "/", $mp4_simple, " -o ", $outname );

  print("_________________\n");
  print;

  system;





end




# ---------------------------------
# DCTP
# ---------------------------------
# Example: 
# =================================
parsername "dctp_mediathek_get": ( "http://www.dctp.tv" )
start
  match( "(mp4:.*\")" );
  print;
end


# ---------------------------------
# ORF
# ---------------------------------
# Example: 
# http://tvthek.orf.at/topics/Wehrpflicht%20oder%20Berufsheer/5219477-Zeit-im-Bild/segments/5219513-Zivildienst-fuer-Frauen
# =================================
parsername "orf_mediathek_get": ( "http://tvthek.orf.at" )
start
  #linkextract;
  #print;
  match( "(mp4:.*?mp4)|(rtmp.*?\")" );
  show_match;
end



##################################################################################
#### BELOW IS OLD STUFF, some infos that might be helpful for parser-devel.
##################################################################################

# 
# (* Sender-spezifische URL-Grabber *)
# (* ============================== *)
# let zdf_mediathek_get_mmsurl    = web_asx_mms_get
# let orf_mediathek_get_mmsurl    = web_asx_mms_get
# let arte_mediathek_get_rtmp_url = arte_get
# let ard_mediathek_get           = ard_mediathek_get_rtmp_mp4_url_version_4
# let ndr_mediathek_get           = ndr_mediathek_get
# 
# 
# --------------------------------------------------------------------------------------
#
#
#
# (* http://www.ndr.de/fernsehen/sendungen/45_min/videos/minuten393.html
# 
# <div id="flash_player_audio_gallery_minuten393">
# F&uuml;r diesen Inhalt muss JavaScript aktiviert und die aktuelle Version vom Adobe Flash Player installiert sein. Sie k&ouml;nnen den Player hier runterladen. <a href="http://get.adobe.com/de/flashplayer/" title="Adobe Flash Player runterladen">http://get.adobe.com/de/flashplayer/</a>
# <div class="filename invisible" data-value="http://media.ndr.de/progressive/2011/1205/TV-20111205-2327-1201.hq.mp4"></div>
# <div class="imgname invisible" data-value="/fernsehen/sendungen/45_min/hintergrund/paketsklaven133_v-contentgross.jpg"></div>
# </div>
# *)
# 
