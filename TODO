

BUGs:
=====

 - the interactive loop for menue-item selection needs to catch excceptions for failing int_of_string !!

 - to-string: incomplete

 -  PROBLEM: ( ????? )
    parsername "ndr_mediathek_get": ( "http://www.ndr.de" )
    start
      match( "http://.*?mp4" );
      print;
      show_type;
      rowselect(0);
      store("url");
      makeurl($url);
      print;
      show_type;
      get;
    end

    possibly get works fine, but save() must be implemented !!

 - interactive selection menue: strangely, when just typing enter problems occur.
   Non-match case occurs.
   Must be checked, if there are not-correctly caught exceptions at the input part,
   or if possibly giving back index instead of selection string would make
   more sense. (possibly using index might makse sense, but can at some other
   parts of the program become a bit more effort.



BETTER STRUCTURE, CLEANER CODE:
===============================

 - URL-analysis in network.ml: wouldn#t it be better in parsers.ml?
 - maybe remove print_string(), ebacsue print() does the same now.



FEATUREs:
=========

 - !!!! XML-deparse -> get values from XML via name :-)

 - automatic lookup for rc-file also in other places (/etc/skel or something like that?) ???

 - syntacttic sugar: access to Array.items via  Dot-notation... eg.  $STACK.0, $STACK.1, $STACK.2 and so on.

 - new command: astore("NAME");  (autostore() -> store current value like matrix -> NAME.(x).(y) or something like that

 - matches and assignments -> each match-group one varname... like   (url,vidname,foobar) = match("^(.*)xyz(lala).*?(foobar)")

 - grepmatch: grep a match-result: give back a row (or many rows?), where the grep-pattern matches.

 - other syntax/grammar:
     - parser-Definitions only what to do, URLs not (or not necessarily?) at parser-definitoion.
     - command for attaching parsers to URLs or vice versa.
       something like:     attach parser "ard_mediathek_get" to ("http://...", "http://"...")
                 or        attach_urls "ard_mediathek_get" ("http://...", "http://"...")


 - Programmaufruf-Definitionen

 - evtl. grep-Kommando, das zeilenweise arbeitet.... f√ºr die handhabung von href's

 - possibly switch to ulex instead of ocamllex:
     http://alain.frisch.fr/soft.html#ulex
     http://caml.inria.fr/pub/ml-archives/caml-list/2006/04/6d31ef03a5a1f9a182a9ed2422d266a4.en.html

 - Macros or not?

 - maybe add a more sophisticated program invocation (fork/exec or popen) ?

 - would it make sene to allow get also to read the streams?
   Or should there be some other special commadn for it?
   like "get_stream" ?



QUESTIONS:
==========

 - how detailed/verbose or how non-verbose should the commands be?
   e.g.  should print; print onl ythe url or url and referrer?
   Should there be more specific commands?
   Or should print get parameters?
   Or should there be something like
      print with referrer;

