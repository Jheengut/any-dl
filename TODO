

BUGs:
=====

- Neturl.Malformed_URL will be thropwn at rebase of URL. Workaround is done
  with try/with around the whole parser-evaluation. Better would be,
  to use try/with around the Rebase-function, and ignore (with warning message)
  those Link-Exztractions, hich are no valid URLs!

  => so, better cath the exception in Link_extract


 - to-string: incomplete

 - catch non-matches: "Fatal error: exception Main.No_Match" => catch exception earlier (should only affect current parse, not whole program)

 - Bug bei baseurl: wenn "/" am Ende der match-URLs, dann klappt es nicht...!!!

 - CONCAT bei REBASE: mehrfache "/" werden nicht reduziert zu einfachem

 -  PROBLEM:
    parsername "ndr_mediathek_get": ( "http://www.ndr.de" )
    start
      match( "http://.*?mp4" );
      print;
      show_type;
      rowselect(0);
      store("url");
      makeurl($url);
      print;
      show_type;
      get;
    end

    possibly get works fine, but save() must be implemented !!


- URL-selection does not work properly. Different selection-algorithm is needed:
    max. string-match of the URL on the match-url


BETTER STRUCTURE, CLEANER CODE:
===============================

 - URL-analysis in network.ml is a mess
 - URL-analysis in network.ml: wouldn#t it be better in parsers.ml?
 - maybe remove print_string(), ebacsue print() does the same now.



FEATUREs:
=========

 - !!!! XML-deparse -> get values from XML via name :-)


 - automatic lookup for rc-file also in other places (/etc/skel or something like that?) ???

 - syntacttic sugar: access to Array.items via  Dot-notation... eg.  $STACK.0, $STACK.1, $STACK.2 and so on.

 - matches and assignments -> each match-group one varname... like   (url,vidname,foobar) = match("^(.*)xyz(lala).*?(foobar)")

 - grepmatch: grep a match-result: give back a row (or many rows?), where the grep-pattern matches.

 - other syntax/grammar:
     - parser-Definitions only what to do, URLs not (or not necessarily?) at parser-definitoion.
     - command for attaching parsers to URLs or vice versa.
       something like:     attach parser "ard_mediathek_get" to ("http://...", "http://"...")
                 or        attach_urls "ard_mediathek_get" ("http://...", "http://"...")


 - Input-URL: eigene Variable, unter der diese abzurufen ist (from inside parser-def-lang)

 - Programmaufruf-Definitionen

 - Parserdefinitionen wenigstens für ARD, ZDF, ORF, NDR, besser auch gleich für ARTE (siehe arte-dl)

 - evtl. grep-Kommando, das zeilenweise arbeitet.... für die handhabung von href's

 - interactive selection of e.g. matches (e.g.: which video to download, high-res, midres or lowres?)


 - possibly switch to ulex instead of ocamllex:
     http://alain.frisch.fr/soft.html#ulex
     http://caml.inria.fr/pub/ml-archives/caml-list/2006/04/6d31ef03a5a1f9a182a9ed2422d266a4.en.html

 - Macros or not?


QUESTIONS:
==========

 - how detailed/verbose or how non-verbose should the commands be?
   e.g.  should print; print onl ythe url or url and referrer?
   Should there be more specific commands?
   Or should print get parameters?
   Or should there be something like
      print with referrer;


